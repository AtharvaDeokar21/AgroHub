-- Create the database
CREATE DATABASE IF NOT EXISTS farmeragriculture;
USE farmeragriculture;

-- Create farmerprofile table
CREATE TABLE FarmerProfile (
    FarmerId INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(255),
    MiddleName VARCHAR(255),
    LastName VARCHAR(255),
    PhoneNumber VARCHAR(15) UNIQUE,
    Location VARCHAR(255),
    LandArea DECIMAL(10, 2),
    PasswordHash VARCHAR(255)
);

CREATE TABLE CropInfo (
    CropId INT PRIMARY KEY AUTO_INCREMENT,
    CropName VARCHAR(255),
    PlantingDate DATE,
    HarvestDate DATE,
    EstimatedYield DECIMAL(10, 2),
    Status VARCHAR(50)
);

CREATE TABLE Grows (
    GrowId INT PRIMARY KEY AUTO_INCREMENT,
    FarmerId INT,
    CropId INT,
    FOREIGN KEY (FarmerId) REFERENCES FarmerProfile(FarmerId),
    FOREIGN KEY (CropId) REFERENCES CropInfo(CropId)
);

CREATE TABLE Sales (
    SaleId INT PRIMARY KEY AUTO_INCREMENT,
    DateOfSale DATE,
    PricePerUnit DECIMAL(10, 2),
    QuantitySold DECIMAL(10, 2),
    Earnings DECIMAL(10, 2),
    CropId INT,
    FarmerId INT,
    FOREIGN KEY (CropId) REFERENCES CropInfo(CropId) ON DELETE CASCADE,
    FOREIGN KEY (FarmerId) REFERENCES FarmerProfile(FarmerId)
);

CREATE TABLE FertilizerPesticide (
    ProductId INT PRIMARY KEY AUTO_INCREMENT,
    ProductName VARCHAR(255),
    Type VARCHAR(50),
    QuantityUsed DECIMAL(10, 2),
    Cost DECIMAL(10, 2)
);

CREATE TABLE ManageCrop (
    ManageCropId INT PRIMARY KEY AUTO_INCREMENT,
    CropId INT,
    ProductId INT,
    FOREIGN KEY (CropId) REFERENCES CropInfo(CropId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES FertilizerPesticide(ProductId) ON DELETE CASCADE
);

